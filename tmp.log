---- EXPECTED ----
[filter_proposals] top_n_idx: torch.Size([1, 1000])
[filter_proposals] before NMS: boxes=torch.Size([1000, 4]), scores=torch.Size([1000]), img_shape=(800, 800)
[filter_proposals] boxes: torch.Size([1000, 4])
[filter_proposals] len(keep1): 203
[filter_proposals] len(keep2): 203
[filter_proposals] len(keep3): 196
[filter_proposals] len(keep4): 196
[filter_proposals] after NMS: boxes=torch.Size([196, 4])
[rpn_forward] final boxes: [torch.Size([196, 4])]
tensor([[  0.0000, 326.1956,   0.0000,  14.2101],
        [800.0000, 331.1972,   0.0000, 271.3394],
        [800.0000, 800.0000, 660.6342, 283.5781],
        ...,
        [  0.0000, 800.0000, 144.3707, 191.1313],
        [  0.0000, 345.5258,   0.0000, 485.5961],
        [ 55.6986, 108.0774, 263.2817, 194.8035]])


[filter_proposals] proposals1: tensor([[[ 281.4643,  694.5139,  332.5364,  410.3947],
         [ 890.4519,  510.6472,  730.9303,  514.8411],
         [1153.9958, -404.1505,  762.8396, -637.1257],
         ...,
         [ 532.0361,  -93.3903,  526.0361,   77.0251],
         [ 477.7545,  760.4913, -238.7612,  -47.9746],
         [ 883.4086,  319.3913,  686.1668,  295.3956]]])

[rpn_forward] features: 1, images: 1
[rpn_forward] features: [tensor([[[[ 2.7611, -0.4199, -1.7231,  ..., -3.2911, -0.1097,  0.4143],
          [ 2.5569,  0.5759, -2.0181,  ...,  0.0266,  1.1161, -0.5291],
          [ 0.0126,  1.2104,  0.4274,  ...,  0.9456,  0.5046,  0.2324],
          ...,
          [-0.9168,  0.0683, -0.4592,  ...,  1.3950, -0.5308, -1.6730],
          [ 0.8920, -0.6431, -0.0358,  ...,  1.1213,  1.0706, -0.9999],
          [ 0.3291,  0.4287,  0.0624,  ..., -0.3883, -0.7858,  0.0114]],

         [[ 0.8266,  1.5962, -0.3374,  ...,  0.0319,  0.7848,  1.1873],
          [ 1.5925, -2.9953, -2.0541,  ..., -0.4861, -0.1649, -1.4321],
          [ 0.1377,  1.1735,  0.1188,  ..., -1.4460, -1.7217, -0.8071],
          ...,



---- GOT ----
[filter_proposals] top_n_idx: torch.Size([1, 1000])
[filter_proposals] before NMS: boxes=torch.Size([1000, 4]), scores=torch.Size([1000]), img_shape=torch.Size([1, 3])
[filter_proposals] boxes: torch.Size([1000, 4])
[filter_proposals] len(keep1): 12
[filter_proposals] len(keep2): 12
[filter_proposals] len(keep3): 1
[filter_proposals] len(keep4): 1
[filter_proposals] after NMS: boxes=torch.Size([1, 4])
[rpn_forward] final boxes: [torch.Size([1, 4])]
tensor([[3., 1., 3., 1.],
        [3., 1., 3., 1.],
        [3., 1., 3., 1.],
        ...,
        [3., 1., 3., 1.],
        [3., 0., 0., 1.],
        [3., 1., 3., 0.]], device='cuda:0')

[filter_proposals] proposals1: tensor([[[1020.1755, -180.9994, 1661.4648,  -18.3321],
         [1439.0103,  148.2092,  878.7825,  109.0045],
         [ 171.9653,  807.8484, -125.9763,  -66.5694],
         ...,
         [ 251.1785,  417.8365,  452.8110,  535.4530],
         [ 204.5815,  633.3436,  167.5884,  248.2048],
         [ 441.7442,  -52.2963, 1455.6287,  217.5158]]], device='cuda:0')

[rpn_forward] features: 1, images: 1
[rpn_forward] features: tensor([[[-0.2230, -0.6095,  1.2244,  ..., -0.9968,  1.2021, -0.5200],
         [-1.6058, -0.6463,  0.2986,  ...,  0.2275, -0.4753, -1.3341],
         [-0.3633,  0.4486,  0.4604,  ...,  0.0507, -0.9871,  0.2995],
         ...,
         [-0.8792,  1.2280, -0.6137,  ..., -1.1470,  0.4833,  0.2383],
         [ 1.1437, -1.0664, -0.7851,  ..., -0.4563, -0.1740, -1.0466],
         [-0.5738,  1.4727,  0.1356,  ..., -0.7833, -0.9883,  0.2307]],

